name: packages

on:
  push:
    branches: [ "master" ]
    tags: ['\d+.\d+.\d']
    paths-ignore:
      - 'README.md'
      - 'Upgradier.png'
      - 'xunit.runner'
      - 'Directory.Build.*'
      - 'LICENSE.txt'
      - '.editorconfig'

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip-ci')"
    runs-on: ubuntu-latest

    steps:
    - name: git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # error if tag not exists in main
    # - name: tag in main
    #   run: git branch -a --contains "${{github.ref_name}}" | grep '.*/master$' 
    - name: setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: restore
      run: dotnet restore
    - name: build
      run: dotnet build -c Release --no-restore
    - name: tests
      run: dotnet test -c Release -p:CollectCoverage=true -p:CoverletOutput=coverage-results/ -p:CoverletOutputFormat=opencover --no-build --verbosity normal
    - name: Create Test Coverage Badge
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_coverage_badge
      with:
        label: Test Coverage
        color: brightgreen
        path: tests/Upgradier.Tests/coverage-results/coverage.opencover.xml
        gist-filename: "code-coverage-upgradier.json"
        gist-id: "d51c51b9b1e64ce740782fe8db02a889"
        gist-auth-token: ${{ secrets.GIST }}
    - name: Coverage result
      run: |
          echo "Percentage ${{steps.create_coverage_badge.outputs.percentage}}%"
          echo "Badge ${{steps.create_coverage_badge.outputs.badge}}"
    # - name: package
    #   run: dotnet nuget push --api-key ${{secrets.NUGET}} --skip-duplicate --source https://api.nuget.org/v3/index.json artifacts/*.nupkg
